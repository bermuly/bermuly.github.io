[{"authors":null,"categories":null,"content":"Viktoria Zheldakova is a student of the Peoples’ Friendship University of Russia in direction of “Fundamental Informatics and Information Technologies”. Her research interests include Artificial Intelligence, Data Science and Computer Science.\n  Download my resumé.\n","date":1372636800,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":1372636800,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"","publishdate":"0001-01-01T00:00:00Z","relpermalink":"","section":"authors","summary":"Viktoria Zheldakova is a student of the Peoples’ Friendship University of Russia in direction of “Fundamental Informatics and Information Technologies”. Her research interests include Artificial Intelligence, Data Science and Computer Science.","tags":null,"title":"Viktoria Zheldakova","type":"authors"},{"authors":[],"categories":null,"content":" Click on the Slides button above to view the built-in slides feature.   Slides can be added in a few ways:\n Create slides using Wowchemy’s Slides feature and link using slides parameter in the front matter of the talk file Upload an existing slide deck to static/ and link using url_slides parameter in the front matter of the talk file Embed your slides (e.g. Google Slides) or presentation video on this page using shortcodes.  Further event details, including page elements such as image galleries, can be added to the body of this page.\n","date":1906549200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1906549200,"objectID":"a8edef490afe42206247b6ac05657af0","permalink":"https://example.com/talk/example-talk/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/talk/example-talk/","section":"event","summary":"An example talk using Wowchemy's Markdown slides feature.","tags":[],"title":"Example Talk","type":"event"},{"authors":["Viktoria Zheldakova"],"categories":[],"content":"In computer programming, a scientific programming language can refer to two degrees of the same concept.\nIn a broad sense, a scientific programming language is a programming language that is widely used in computational science and computational mathematics. In this sense, C/C++ and Python can be considered as scientific programming languages.\nIn a broader sense, a scientific programming language is a language that is designed and optimized to use mathematical formulas and matrices. Such languages are characterized not only by the presence of libraries that perform mathematical or scientific functions, but also by the syntax of the language itself.]\\ For example, neither C++ nor Python have built-in matrix types or functions for matrix arithmetic (addition, multiplication, etc.); instead, this function is available through standard libraries. Scientific programming languages in a stricter sense include ALGOL , APL , Fortran , J , Julia , Maple , MATLAB , and R .\nScientific programming languages should not be confused with scientific language in general, which loosely refers to the higher standards of accuracy, correctness and brevity expected from practitioners of the scientific method.\n","date":1653738941,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1653738941,"objectID":"fbc8c0518d8592046bc95701f24efc5a","permalink":"https://example.com/post/scienproglang/","publishdate":"2022-05-28T14:55:41+03:00","relpermalink":"/post/scienproglang/","section":"post","summary":"What is the best programming language to use for scientific work?","tags":["programming"],"title":"Scientific programming language","type":"post"},{"authors":["Viktoria Zheldakova"],"categories":[],"content":"Last week turned out to be quite difficult.\n Large and complex laboratory work English test Training in the gym Bad weather  But all the bad things will go away someday, so I won’t dwell on it and just continue to do as usual.\n","date":1653738917,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1653738917,"objectID":"010c5744fc48db4b07fafd8833b200bb","permalink":"https://example.com/post/last_week_4/","publishdate":"2022-05-28T14:55:17+03:00","relpermalink":"/post/last_week_4/","section":"post","summary":"My progress over the past week","tags":["diary"],"title":"Last week 4","type":"post"},{"authors":[],"categories":[],"content":"Are you a student who often has to give presentations in front of your teacher or professor? Or an employee who often has to give presentations in front of your clients or your boss?\nWell, whoever you are, I am sure you have experienced nervous or anxious when you have to give a presentation or speaking in front of the public.\nA public opinion poll about fear reveals that fear of death stand at the second place of the list after the fear of public speaking that stand at the first place. A result that shows us about just how many people who afraid to speak in front of the public.\nActually, giving a presentation or speaking in front of a public is not as scary as many people imagine. As long as you prepare the presentation properly and willing to practice sufficiently, you will be a able to make a good, convincing and memorable presentation.\nHere are some tips that you can use to make a convincing presentation. These tips are based on my experience in giving presentations and public speaking, as well as some presentations training I have attended.\nChoose the topic of your presentation Choosing the topic of your presentation is arguably one of the most important parts of presentation creation.\nIf you’re a business professional, and you don’t have the luxury of picking out your presentation topic, that’s okay. You can always find a unique angle, such as focusing on a specific problem.\nEven if it doesn’t seem to be an exciting topic, you can still make your presentation engaging with the right presentation skills and eye-catching presentation visuals.\nResearch your topic and know it inside and out When the time comes to present your presentation, you need to feel confident in yourself and your abilities in order to win your crowd’s trust.\nOne way you can achieve this is by knowing all the ins and outs of your topic. This way, you’ll feel prepared for any questions and know just how to answer them.\nYou can do in-depth research on any topic by reading up on related material online or in a library. But if you want to walk the extra mile, you can even get in touch with some of your audience in advance and ask them what they’d like to see in your presentation.\nThis little trick will help you focus on the important areas, and find answers to legitimate concerns and questions that your audience will likely have.\nAnother positive note to knowing your topic well is that in case you’re zooming through your presentation and you end up having extra time on your hands, you can add in bonus information about your topic to educate your audience.\nConsider your audience and speak their language Now, not only do you need to know your topic well, but you also need to know and study your future audience just as well. Why?\nBecause by knowing your crowd’s interests, attention span and pain points, you’ll be able to connect them through your presentation. Plus, you’ll be in a better position to solve their problems and add value to their lives.\nFor example, an advanced, data-driven presentation full of technical jargon might not be the best idea if you’re presenting to someone who is new to your field and unfamiliar with complicated terms. It might end up confusing them instead of leaving a strong impact. You need to be able to speak their language and meet them on their level.\nGoing back to the example above, your presentation would likely be more successful if you simplify the information and start with the basics before jumping into the data and technicalities.\nKeep it Simple: Concentrate on your Core Message When planning your presentation, you should always keep in mind the question: What is the key message (or three key points) for my audience to take away? You should be able to communicate that key message very briefly.\nSome experts recommend a 30-second ‘elevator summary’, others that you can write it on the back of a business card, or say it in no more than 15 words.\nWhichever rule you choose, the important thing is to keep your core message focused and brief. And if what you are planning to say doesn’t contribute to that core message, don’t say it.\nStart Strongly The beginning of your presentation is crucial. You need to grab your audience’s attention and hold it.\nThey will give you a few minutes’ grace in which to entertain them, before they start to switch off if you’re dull. So don’t waste that on explaining who you are. Start by entertaining them.\nTry a story (see tip 7 below), or an attention-grabbing (but useful) image on a slide.\nRemember the 10-20-30 Rule for Slideshows This is a tip from Guy Kawasaki of Apple. He suggests that slideshows should:\n Contain no more than 10 slides; Last no more than 20 minutes; and Use a font size of no less than 30 point.  This last is particularly important as it stops you trying to put too much information on any one slide. This whole approach avoids the dreaded ‘Death by PowerPoint’.\nAs a general rule, slides should be the sideshow to you, the presenter. A good set of slides should …","date":1653052764,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1653052764,"objectID":"8a5c0600a2454f32ad40c9294b82dec4","permalink":"https://example.com/post/how-to-presentation/","publishdate":"2022-05-20T16:19:24+03:00","relpermalink":"/post/how-to-presentation/","section":"post","summary":"Whether you are an experienced presenter, or just starting out, there should be ideas here to help you to improve.","tags":[],"title":"How to Make an Effective Presentation","type":"post"},{"authors":["Viktoria Zheldakova"],"categories":null,"content":"Overview I was super productive last week. I managed to complete all the necessary tasks before the deadline for their acceptance.\nI managed to go to the gym and read several chapters of the most interesting literature.\nI hope you also had a good week.\n","date":1653052745,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1653052745,"objectID":"665fc88eb1c62896a5d04ee051e2c252","permalink":"https://example.com/post/last-week_3/","publishdate":"2022-05-20T16:19:05+03:00","relpermalink":"/post/last-week_3/","section":"post","summary":"About last week","tags":["diary"],"title":"Last Week 3","type":"post"},{"authors":["Viktoria Zheldakova"],"categories":[],"content":"What is Markdown Markdown is a text markup language for documents. It was invented in 2004 by blogger John Gruber and Internet activist Aaron Schwartz to quickly format articles. As a result, they have a simple language that is still actively used.\nThe point of the markdown is that you make the markup of your document with minimal effort, and already some other plugin or program turns your markup into a final document - for example, HTML. But it is possible not in HTML, but in PDF or something else. Markdown is like a language for other programs to form documents based on your text.\nThe only thing you may need is to adjust fonts, margins and colors in this plugin to make the result look beautiful. You set it up once, and then you quickly write a lot of materials that will turn into ready-made articles with good markup at the output.\nRise and divergence As Markdowns popularity grew rapidly, many Markdown implementations appeared, driven mostly by the need for additional features such as tables, footnotes, definition lists, and Markdown inside HTML blocks.\nThe behavior of some of these diverged from the reference implementation, as Markdown was only characterised by an informal specification and a Perl implementation for conversion to HTML.\nAt the same time, a number of ambiguities in the informal specification had attracted attention. These issues spurred the creation of tools such as Babel mark to compare the output of various implementations, and an effort by some developers of Markdown parsers for standardisation. However, Gruber has argued that complete standardization would be a mistake: “Different sites (and people) have different needs. No one syntax would make all happy.”\nWhy is this necessary?   To add markup to places where real markup is not possible. For example, in a simple text file or in the same SMS, where it is impossible to highlight bold, create titles, highlight quotes, etc.\n  For more convenient writing of texts for subsequent conversion to HTML or other formats.\n  Conclusions As you can see, Markdown, despite the fact that it is more than a decade old, is still a popular text markup language. Its simplicity and economy wins the hearts of more and more new users who find various non-trivial uses for it\n","date":1652530237,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1652530237,"objectID":"bd238f54b82fdcd586f8f7e438599565","permalink":"https://example.com/post/markdown/","publishdate":"2022-05-14T15:10:37+03:00","relpermalink":"/post/markdown/","section":"post","summary":"What is Markdown and why is it needed?","tags":["markdown"],"title":"Markdown","type":"post"},{"authors":["Zheldakova Viktoria"],"categories":[],"content":"The past week has been quite stressful, but I’ve coped because I really like what I’m doing.\n All laboratory work was completed on time I didn’t go to the gym because of a busy schedule Did you manage to take a walk with friends   I think I spent this week quite productively and I hope that next week everything will be the same.\n","date":1652530205,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1652530205,"objectID":"8a35701d7ac0a4bc50429e19964d4a10","permalink":"https://example.com/post/last-week_2/","publishdate":"2022-05-14T15:10:05+03:00","relpermalink":"/post/last-week_2/","section":"post","summary":"How I spent last week","tags":["diary"],"title":"Last Week 2","type":"post"},{"authors":["Viktoria Zheldakova"],"categories":[],"content":"   In programming, the version control system is responsible for saving code at checkpoints — a special technology that can be connected to any project. The version control system insures against errors and returns the code to the state when everything worked.\nA Brief history of Git Like many things in life, Git started with a bit of creative chaos and heated arguments.\nThe Linux kernel is a fairly large open source project. For most of the Linux kernel development time (1991-2002), changes were passed between developers in the form of patches and archives. In 2002, the Linux kernel project started using the proprietary decentralized BitKeeper SCR.\nIn 2005, the relationship between the Linux kernel development community and the commercial company that developed BitKeeper ceased, and free use of the utility became impossible. This prompted the Linux kernel development community (and in particular Linus Torvalds, the creator of Linux) to develop their own utility, taking into account the lessons learned while working with BitKeeper. Some of the goals pursued by the new system were:\n Speed Simple architecture Good support for non-linear development (thousands of parallel branches) Full decentralization  The ability to effectively manage large projects, such as the Linux kernel (speed and reasonable use of disk space) Since its introduction in 2005, Git has evolved into an easy-to-use system while retaining its original qualities. It is surprisingly fast, efficient in working with large projects and has an excellent branch system for non-linear development.\nGit is a distributed version system Version control systems can be local, centralized, or distributed.\nA local system stores files on a single device, a centralized system uses a shared server, and a distributed system uses shared cloud storage and local devices of team members. It is convenient to work with large projects in a local system, but it is difficult to interact with a remote team.\nIn a centralized system, remote work is established, but everything is tied to one server. Any failure or hacking can damage the project files.\nRemote work is established in the distributed system. If something happens to the files of the main repository, it is easy to restore the project from a copy of any team member.\nGit is not GitHub Git is a program that needs to be installed and connected to a project to manage a version control system. GitHub is a repository site for project version histories: you connect Git, register on GitHub, create an online repository and transfer files from Git to GitHub.\nGit is the most popular version control system, and GitHub is an online code repository. Git and GitHub are configured to interact and therefore are often used as a single mechanism for working with a project.\nWhy would a beginner learn Git Git is used in most companies where at least two developers work on the project:\n A new person comes to the company and clones the project repository on a PC. Gets a task, creates a new branch and writes code. When everything is ready, it sends a request to add code to the master branch. Other developers look at the code, leave comments and point out errors. The beginner completes the code, updates the master branch and moves on to the next task.  ","date":1651926662,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1651926662,"objectID":"63e7ef69fd88eb116445555fab7cd3d8","permalink":"https://example.com/post/git/git/","publishdate":"2022-05-07T15:31:02+03:00","relpermalink":"/post/git/git/","section":"post","summary":"In recent years, the popularity of Git has been showing explosive growth. This version control system is used by various open source projects.","tags":["git"],"title":"Git","type":"post"},{"authors":["Viktoria Zheldakova"],"categories":[],"content":"My main tasks of this week were:\n Laboratory work on “Modeling” Laboratory works on “Operating systems”  I easily coped with the first point due to the rather long use of Python. There were no big problems with the second point. Although it was possible to do everything faster. I think I wasn’t particularly productive this week because I didn’t keep the balance of work and rest. Next week, I should pay more attention to the reasonable allocation of time.\n","date":1651926643,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1651926643,"objectID":"2c8b9454c47c3bec53029fed26c626c1","permalink":"https://example.com/post/last-week/","publishdate":"2022-05-07T15:30:43+03:00","relpermalink":"/post/last-week/","section":"post","summary":"Briefly about the events of the past week","tags":["diary"],"title":"Last Week","type":"post"},{"authors":null,"categories":null,"content":"Biography Charles Babbage was born in the family of banker Benjamin Babbage, on December 26, 1791. Due to poor health, Charles did not attend school. By the age of eleven, the parents still decide to send Charles to a private school. After graduating from this school, he is sent to the academy in Enfield, where he gets acquainted with the textbook that determined the passion of his entire later life.. In 1811, Charles became a student at Trinity College. There he meets other gifted students. Together they organized an “Analytical Society” within the walls of the university. After Cambridge, Charles lectured, worked together with Herschel on scientific work related to electricity. He wrote books and tried to engage in politics. In addition, Babbage was interested in engineering, in particular the work of trains. He invented the triangular device “sweeper”.\nThe project of the Analytical machine In 1834, Babbage thought about creating a universal machine that would allow solving the entire class of computational problems. He assumed that building a new machine would require less time and money than finalizing a difference machine, since it had to consist of simpler mechanical elements. He provided the following parts in the analytical engine: 1. Warehouse 2. Factory or mill 3. Control device 4. Information input/output devices. The amount of memory was supposed to be a thousand numbers of 50 decimal places. Babbage decided to use punch cards to enter data into memory and control the operation of the machine. It was also possible to organize conditional execution of operations and cycles.\nCreating an Analytical Machine Despite the fact that Babbage described in detail the design of the Analytical Engine and the principles of its operation, it was never built during his lifetime. There were many reasons for this, but the main ones were the complete lack of funding for the project to create an Analytical Machine and the low level of technology at that time. It was only after the death of Charles Babbage that his son continued the business his father had started. In 1906, Henry, together with the Monroe company, built a working model of the car. Charles Babbage’s greatest achievement was the development of the principles underlying modern computers, a century before the technical possibility of their implementation appeared.\nConclusion The attitude of contemporaries to this scientist changed over time from a genius to an eccentric and even to an inventor who lost his mind on the basis of computers. The president of the Royal Society, Lord Ross, wrote that “Babbage, only with his inventions in the field of mechanical engineering, fully reimbursed the funds that the government invested in the construction of his difference machine.” The idea that was born in the nineteenth century and became a reality in the twentieth century, made a revolution not only in science, but also in our daily life.\n","date":1651104000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1651104000,"objectID":"e8f8d235e8e7f2efd912bfe865363fc3","permalink":"https://example.com/project/example/","publishdate":"2022-04-28T00:00:00Z","relpermalink":"/project/example/","section":"project","summary":"The history of the invention that changed the life of all mankind.","tags":["History of computer technology"],"title":"C. Babbage's Analytical engine","type":"project"},{"authors":[],"categories":[],"content":"Create slides in Markdown with Wowchemy Wowchemy | Documentation\n Features  Efficiently write slides in Markdown 3-in-1: Create, Present, and Publish your slides Supports speaker notes Mobile friendly slides   Controls  Next: Right Arrow or Space Previous: Left Arrow Start: Home Finish: End Overview: Esc Speaker notes: S Fullscreen: F Zoom: Alt + Click PDF Export: E   Code Highlighting Inline code: variable\nCode block:\nporridge = \u0026#34;blueberry\u0026#34; if porridge == \u0026#34;blueberry\u0026#34;: print(\u0026#34;Eating...\u0026#34;)  Math In-line math: $x + y = z$\nBlock math:\n$$ f\\left( x \\right) = ;\\frac{{2\\left( {x + 4} \\right)\\left( {x - 4} \\right)}}{{\\left( {x + 4} \\right)\\left( {x + 1} \\right)}} $$\n Fragments Make content appear incrementally\n{{% fragment %}} One {{% /fragment %}} {{% fragment %}} **Two** {{% /fragment %}} {{% fragment %}} Three {{% /fragment %}} Press Space to play!\nOne  Two  Three   A fragment can accept two optional parameters:\n class: use a custom style (requires definition in custom CSS) weight: sets the order in which a fragment appears   Speaker Notes Add speaker notes to your presentation\n{{% speaker_note %}} - Only the speaker can read these notes - Press `S` key to view {{% /speaker_note %}} Press the S key to view the speaker notes!\n Only the speaker can read these notes Press S key to view    Themes  black: Black background, white text, blue links (default) white: White background, black text, blue links league: Gray background, white text, blue links beige: Beige background, dark text, brown links sky: Blue background, thin dark text, blue links    night: Black background, thick white text, orange links serif: Cappuccino background, gray text, brown links simple: White background, black text, blue links solarized: Cream-colored background, dark green text, blue links   Custom Slide Customize the slide style and background\n{{\u0026lt; slide background-image=\u0026#34;/media/boards.jpg\u0026#34; \u0026gt;}} {{\u0026lt; slide background-color=\u0026#34;#0000FF\u0026#34; \u0026gt;}} {{\u0026lt; slide class=\u0026#34;my-style\u0026#34; \u0026gt;}}  Custom CSS Example Let’s make headers navy colored.\nCreate assets/css/reveal_custom.css with:\n.reveal section h1, .reveal section h2, .reveal section h3 { color: navy; }  Questions? Ask\nDocumentation\n","date":1549324800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1549324800,"objectID":"0e6de1a61aa83269ff13324f3167c1a9","permalink":"https://example.com/slides/example/","publishdate":"2019-02-05T00:00:00Z","relpermalink":"/slides/example/","section":"slides","summary":"An introduction to using Wowchemy's Slides feature.","tags":[],"title":"Slides","type":"slides"},{"authors":["Viktoria Zheldakova","Robert Ford"],"categories":null,"content":" Click the Cite button above to demo the feature to enable visitors to import publication metadata into their reference management software.    Create your slides in Markdown - click the Slides button to check out the example.   Supplementary notes can be added here, including code, math, and images.\n","date":1372636800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1372636800,"objectID":"ff6a19061a984819d30c916886db56ef","permalink":"https://example.com/publication/example/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/publication/example/","section":"publication","summary":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum.","tags":[],"title":"An example conference paper","type":"publication"}]